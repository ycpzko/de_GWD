#!/bin/bash
domain=$(jq -r '.v2nodeForUpdate.address' /usr/local/bin/0conf)
port=$(jq -r '.v2nodeForUpdate.port' /usr/local/bin/0conf)
uuidnum=$(jq -r '.v2nodeForUpdate.uuid' /usr/local/bin/0conf)
v2path=$(jq -r '.v2nodeForUpdate.path' /usr/local/bin/0conf)

cat > /usr/local/bin/vtrui/config.json << EOF
{
  "dns":{"servers":["localhost"]},
  "inbounds":[
    {
    "port":9896,
    "listen":"127.0.0.1",
    "protocol":"dokodemo-door",
    "sniffing":{"enabled":true,"destOverride":["http","tls"]},
    "settings":{"auth": "noauth","network":"tcp,udp","followRedirect":true},
    "streamSettings":{"sockopt":{"tproxy":"tproxy"}}
    }
  ],
  "outbounds": [
    {
      "tag": "proxy",
      "mux": { "enabled": true },
      "protocol": "vmess",
      "settings": {
        "vnext": [
          {
            "address": "xxxx.ooo",
            "port": 443,
            "users": [
              {
                "id": "00000000-0000-0000-0000-000000000000",
                "alterId": 8,
                "security": "none"
              }
            ]
          }
        ]
      },
      "streamSettings": {
        "network": "ws",
        "wsSettings": {
          "path": "/000000"
        },
        "security": "tls",
        "tlsSettings": {
          "serverName": "xxxx.ooo",
          "allowInsecure": false
        },
        "sockopt": {
          "mark": 255
        }
      }
    },
    {
      "tag": "netflix",
      "protocol": "vmess",
      "settings": {
        "vnext": [
          {
            "address": "xxxx.ooo",
            "port": 443,
            "users": [
              {
                "id": "00000000-0000-0000-0000-000000000000",
                "alterId": 8,
                "security": "none"
              }
            ]
          }
        ]
      },
      "streamSettings": {
        "network": "ws",
        "wsSettings": {
          "path": "/000000"
        },
        "security": "tls",
        "tlsSettings": {
          "serverName": "xxxx.ooo",
          "allowInsecure": false
        },
        "sockopt": {
          "mark": 255
        }
      }
    }
  ],
  "routing": {
    "domainStrategy":"AsIs",
    "rules": [
      {
        "type": "field",
        "domain": [
          "domain:netflix.ca",
          "domain:netflix.com",
          "domain:netflix.net",
          "domain:nflxext.com",
          "domain:nflximg.com",
          "domain:nflximg.net",
          "domain:nflxso.net",
          "domain:nflxvideo.net",
          "domain:nflxsearch.net",
          "domain:netflixinvestor.com",
          "domain:netflixdnstest0.com",
          "domain:netflixdnstest1.com",
          "domain:netflixdnstest2.com",
          "domain:netflixdnstest3.com",
          "domain:netflixdnstest4.com",
          "domain:netflixdnstest5.com",
          "domain:netflixdnstest6.com",
          "domain:netflixdnstest7.com",
          "domain:netflixdnstest8.com",
          "domain:netflixdnstest9.com"
        ],
        "outboundTag": "netflix"
      }
    ]
  }
}
EOF

jq --arg domain "$domain" '.outbounds[0].settings.vnext[0].address=$domain' /usr/local/bin/vtrui/config.json |\
jq --argjson port "$port" '.outbounds[0].settings.vnext[0].port=$port' |\
jq --arg uuidnum "$uuidnum" '.outbounds[0].settings.vnext[0].users[0].id=$uuidnum' |\
jq --arg v2path "$v2path" '.outbounds[0].streamSettings.wsSettings.path=$v2path' |\
jq --arg domain "$domain" '.outbounds[0].streamSettings.tlsSettings.serverName=$domain' |\
jq --arg domain "$domain" '.outbounds[1].settings.vnext[0].address=$domain' |\
jq --argjson port "$port" '.outbounds[1].settings.vnext[0].port=$port' |\
jq --arg uuidnum "$uuidnum" '.outbounds[1].settings.vnext[0].users[0].id=$uuidnum' |\
jq --arg v2path "$v2path" '.outbounds[1].streamSettings.wsSettings.path=$v2path' |\
jq --arg domain "$domain" '.outbounds[1].streamSettings.tlsSettings.serverName=$domain' >/tmp/vtrui_temp && mv -f /tmp/vtrui_temp /usr/local/bin/vtrui/config.json

jq '.divertLan.display="none"' /usr/local/bin/0conf >/tmp/0conf_temp && mv -f /tmp/0conf_temp /usr/local/bin/0conf

chmod 666 /usr/local/bin/vtrui/config.json
chmod 666 /usr/local/bin/0conf
