#!/bin/bash
cat << EOF > /usr/local/bin/v2dns/config.json
{
"dns":{
  "hosts":{"localhost":"127.0.0.1"},
  "servers":[
  {"address":"127.0.0.1","port":5310},
  {"address":"127.0.0.1","port":5390,"domains":["domain:google.com"]},
  {"address":"127.0.0.1","port":5310,"domains":["domain:baidu.com"]},
  {"address":"127.0.0.1","port":5390,"domains":["ext:h2y.dat:gfw"]}
  ]
},
"inbounds":[
  {
    "tag": "dnsin",
    "port":53,
    "protocol":"dokodemo-door",
    "settings":{"network":"tcp,udp","address":"1.1.1.1","port":53}
  }
],
"outbounds":[
  {
    "tag": "dnsout",
    "protocol":"dns"
  }
],
"routing":{
  "rules":[
    {"type":"field","inboundTag":["dnsin"],"outboundTag":"dnsout"}
  ]
}
}
EOF



doh1=$(jq -r '.dns.doh1' /usr/local/bin/0conf)
doh2=$(jq -r '.dns.doh2' /usr/local/bin/0conf)

doh1Domain=$(echo $doh1 | cut -d/ -f1 | cut -d: -f1)
doh2Domain=$(echo $doh2 | cut -d/ -f1 | cut -d: -f1)

doh1IP=$(nslookup -port=5310 $doh1Domain 127.0.0.1 | awk '/Address/ {print$2}' | sed '1d' | sed '/[a-z]/d')
doh2IP=$(nslookup -port=5310 $doh2Domain 127.0.0.1 | awk '/Address/ {print$2}' | sed '1d' | sed '/[a-z]/d')

doh_upstream1='url = "https:\/\/'$doh1'"'
doh_upstream2='url = "https:\/\/'$doh2'"'

sed -i "$(sed -ne '/url =/=' /etc/dns-over-https/doh-client.conf | awk NR==1)s?.*?$doh_upstream1?" /etc/dns-over-https/doh-client.conf
sed -i "$(sed -ne '/url =/=' /etc/dns-over-https/doh-client.conf | awk NR==2)s?.*?$doh_upstream2?" /etc/dns-over-https/doh-client.conf

jq --arg key1 "$doh1Domain" --arg value1 "$doh1IP" '.dns.hosts += {($key1): ($value1)}' /usr/local/bin/v2dns/config.json |\
jq --arg key2 "$doh2Domain" --arg value2 "$doh2IP" '.dns.hosts += {($key2): ($value2)}' >/tmp/v2dns_temp && mv -f /tmp/v2dns_temp /usr/local/bin/v2dns/config.json

echo $doh1IP >/usr/local/bin/IPdoh
echo $doh2IP >>/usr/local/bin/IPdoh


cat /dev/null >/usr/local/bin/IPv2node
jq -r '.v2node[].domain' /usr/local/bin/0conf | cut -d: -f1 >/tmp/v2node_temp2
sort /tmp/v2node_temp2 | uniq | sed '/^\s*$/d' >/tmp/v2node_temp
cat /tmp/v2node_temp | while read line 
do
  key=$line
  value=$(nslookup -port=5390 $line 127.0.0.1 | awk '/Address/ {print$2}' | sed '1d' | sed '/[a-z]/d')
echo $value >>/usr/local/bin/IPv2node
jq --arg key "$key" --arg value "$value" '.dns.hosts += {($key): ($value)}' /usr/local/bin/v2dns/config.json >/tmp/v2dns_temp && mv -f /tmp/v2dns_temp /usr/local/bin/v2dns/config.json
done


jq -r '.dns.hosts | to_entries[] | [.key, .value] | @tsv' /usr/local/bin/0conf >/tmp/hosts
if [[ -n $(cat /tmp/hosts) ]]; then
  cat /tmp/hosts | while read line 
  do
    key=$(echo $line | awk '{print$1}')
    value=$(echo $line | awk '{print$2}')
  jq --arg key "$key" --arg value "$value" '.dns.hosts += {($key): ($value)}' /usr/local/bin/v2dns/config.json >/tmp/v2dns_temp && mv -f /tmp/v2dns_temp /usr/local/bin/v2dns/config.json
  done
fi


if [[ $(jq -r '.dns.v2ad' /usr/local/bin/0conf) == "on" ]]; then
/usr/local/bin/ui-v2adADD
else
/usr/local/bin/ui-v2adDEL
fi



if [[ -n $(awk '/listB/ {print;exit}' /usr/local/bin/0conf) ]]; then
  jq -r '.listB | keys[]' /usr/local/bin/0conf >/tmp/listB
  if [[ -n $(cat /tmp/listB)  ]]; then
    jq '.dns.servers[1].domains=[]' /usr/local/bin/v2dns/config.json >/tmp/v2dns_temp && mv -f /tmp/v2dns_temp /usr/local/bin/v2dns/config.json
    cat /tmp/listB | while read line 
    do
    jq --arg listB "keyword:$line" '.dns.servers[1].domains+=[$listB]' /usr/local/bin/v2dns/config.json >/tmp/v2dns_temp && mv -f /tmp/v2dns_temp /usr/local/bin/v2dns/config.json
    done
  fi
fi

if [[ -n $(awk '/listW/ {print;exit}' /usr/local/bin/0conf) ]]; then
  jq -r '.listW | keys[]' /usr/local/bin/0conf >/tmp/listW
  if [[ -n $(cat /tmp/listW)  ]]; then
    jq '.dns.servers[2].domains=[]' /usr/local/bin/v2dns/config.json >/tmp/v2dns_temp && mv -f /tmp/v2dns_temp /usr/local/bin/v2dns/config.json
    cat /tmp/listW | while read line 
    do
    jq --arg listW "keyword:$line" '.dns.servers[2].domains+=[$listW]' /usr/local/bin/v2dns/config.json >/tmp/v2dns_temp && mv -f /tmp/v2dns_temp /usr/local/bin/v2dns/config.json
    done
  fi
fi



jq --arg DNSsplit "gfw" '.dns.DNSsplit=$DNSsplit' /usr/local/bin/0conf >/tmp/0conf_temp && mv -f /tmp/0conf_temp /usr/local/bin/0conf

rm -rf /tmp/v2dns_temp*
rm -rf /tmp/v2node_temp*
rm -rf /tmp/hosts
rm -rf /tmp/listB
rm -rf /tmp/listW

chmod 666 /usr/local/bin/v2dns/config.json
chmod 666 /usr/local/bin/0conf
